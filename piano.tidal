import qualified Sound.Tidal.Scales as Scales
import qualified Sound.Tidal.Chords as Chords
import Sound.Tidal.MIDI.Context
displayOutputDevices >>= putStrLn
devices <- midiDevices

m1 <- midiStream devices "IAC Driver Bus 1" 1 synthController
m2 <- midiStream devices "IAC Driver Bus 1" 1 synthController
m3 <- midiStream devices "IAC Driver Bus 1" 1 synthController
m4 <- midiStream devices "IAC Driver Bus 1" 1 synthController

cps 0.3
-- penta: -1 0, 1 2 3, 4 5, 6 7 8, 9 10, 11 12
-- 5th: 0 2 7, 1 4 6 9 11, 3 5 8 10
-- 5th: 2 7 12, -3 4 11 18 25, -4 3 10 17

m1
-- $ brak
-- $ every (irand 5) (0.25 ~>)
-- $ whenmod 8 6 (rev)
-- $ sometimesBy 0.25 (palindrome)
-- $ fast "2 0.5 0.5 0.5"
-- $ scramble 6
-- $ degradeBy 0.3
-- $ (|+| n "[0 2]")
$ n "[<-1 0> <1 2 3> <4 5> <6 7 8> <9 10> <11 12>]"
-- $ n "<0 2 7> <1 4 6 9 11> <3 5 8 10>"
-- # nudge (slow 8 $ sine)
-- # dur "0.5 0.2"
# velocity "0.3"
# sustainpedal "0.0"
-- # modwheel (sine1)

m2
-- $ sometimesBy 0.75 (0.5 ~>)
-- $ someCyclesBy 0.25 (palindrome)
-- $ every 2 (fast 3)
-- $ whenmod 8 5 (fast 2)
-- $ slow "1 1.1 3"
-- $ iter 4
-- $ shuffle 3
-- $ swingBy (1/2) 2
-- $ degradeBy 0.3
-- $ (|+| n "[-5 0 5 2]")
$ n "[<-1 0> <1 2 3> <4 5> <6 7 8> <9 10> <11 12>]"
-- $ n (toScale Chords.m7sharp5 "[[7 3 2, 3, 7]]*4")
-- $ n (toScale Scales.minPent "[1,2 4]*5 [[8, 5], -9]")
-- # nudge "[0 0.04]*4"
-- # dur (scale 0.1 0.4 sine1)
# velocity (scale 0.2 0.4 $ slow 1.5 saw1)
# sustainpedal "0.5 1.0"
-- modwheel "0.1? 0.5?"

m3
-- $ brak
-- $ every (irand 5) (0.25 ~>)
-- $ whenmod 8 6 (rev)
-- $ sometimesBy 0.25 (palindrome)
-- $ fast "2 0.5 0.5 0.5"
-- $ scramble 3
-- $ degradeBy 0.3
-- $ (|+| n (irand 12))
$ (|+| n "1 2 3")
$ n "[-3 4 11 18 25]*24?"
-- $ n "[[-5, 9 [5, 6](4, 5)]*3?]"
-- # nudge (slow 8 $ sine)
-- # dur "0.5 0.2"
# velocity (scale 0.03 0.1 $ slow 3 sine1)
# sustainpedal "0.0 0.5 1.0"
-- # sustainpedal (scale 0.0 1.0 $ slow 4 sine1)
-- # modwheel "0.1 0.3 0.2"
-- # modwheel (scale 0.0 0.1 sine1)

m1 silence
m2 silence
m3 silence
m4 silence
